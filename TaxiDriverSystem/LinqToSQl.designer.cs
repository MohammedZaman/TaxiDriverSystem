#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaxiDriverSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mz7340g")]
	public partial class LinqToSQlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBreed(Breed instance);
    partial void UpdateBreed(Breed instance);
    partial void DeleteBreed(Breed instance);
    partial void InsertPet(Pet instance);
    partial void UpdatePet(Pet instance);
    partial void DeletePet(Pet instance);
    partial void InsertSpecy(Specy instance);
    partial void UpdateSpecy(Specy instance);
    partial void DeleteSpecy(Specy instance);
    partial void InsertVetbill(Vetbill instance);
    partial void UpdateVetbill(Vetbill instance);
    partial void DeleteVetbill(Vetbill instance);
    #endregion
		
		public LinqToSQlDataContext() : 
				base(global::TaxiDriverSystem.Properties.Settings.Default.mz7340gConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Breed> Breeds
		{
			get
			{
				return this.GetTable<Breed>();
			}
		}
		
		public System.Data.Linq.Table<Pet> Pets
		{
			get
			{
				return this.GetTable<Pet>();
			}
		}
		
		public System.Data.Linq.Table<Specy> Species
		{
			get
			{
				return this.GetTable<Specy>();
			}
		}
		
		public System.Data.Linq.Table<Vetbill> Vetbills
		{
			get
			{
				return this.GetTable<Vetbill>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Breed")]
	public partial class Breed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BreedID;
		
		private int _SpeciesID;
		
		private string _Breed1;
		
		private System.Nullable<decimal> _FoodCostPerKG;
		
		private System.Nullable<decimal> _HousingCosts;
		
		private EntitySet<Pet> _Pets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBreedIDChanging(int value);
    partial void OnBreedIDChanged();
    partial void OnSpeciesIDChanging(int value);
    partial void OnSpeciesIDChanged();
    partial void OnBreed1Changing(string value);
    partial void OnBreed1Changed();
    partial void OnFoodCostPerKGChanging(System.Nullable<decimal> value);
    partial void OnFoodCostPerKGChanged();
    partial void OnHousingCostsChanging(System.Nullable<decimal> value);
    partial void OnHousingCostsChanged();
    #endregion
		
		public Breed()
		{
			this._Pets = new EntitySet<Pet>(new Action<Pet>(this.attach_Pets), new Action<Pet>(this.detach_Pets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreedID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BreedID
		{
			get
			{
				return this._BreedID;
			}
			set
			{
				if ((this._BreedID != value))
				{
					this.OnBreedIDChanging(value);
					this.SendPropertyChanging();
					this._BreedID = value;
					this.SendPropertyChanged("BreedID");
					this.OnBreedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeciesID", DbType="Int NOT NULL")]
		public int SpeciesID
		{
			get
			{
				return this._SpeciesID;
			}
			set
			{
				if ((this._SpeciesID != value))
				{
					this.OnSpeciesIDChanging(value);
					this.SendPropertyChanging();
					this._SpeciesID = value;
					this.SendPropertyChanged("SpeciesID");
					this.OnSpeciesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Breed", Storage="_Breed1", DbType="VarChar(50)")]
		public string Breed1
		{
			get
			{
				return this._Breed1;
			}
			set
			{
				if ((this._Breed1 != value))
				{
					this.OnBreed1Changing(value);
					this.SendPropertyChanging();
					this._Breed1 = value;
					this.SendPropertyChanged("Breed1");
					this.OnBreed1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodCostPerKG", DbType="SmallMoney")]
		public System.Nullable<decimal> FoodCostPerKG
		{
			get
			{
				return this._FoodCostPerKG;
			}
			set
			{
				if ((this._FoodCostPerKG != value))
				{
					this.OnFoodCostPerKGChanging(value);
					this.SendPropertyChanging();
					this._FoodCostPerKG = value;
					this.SendPropertyChanged("FoodCostPerKG");
					this.OnFoodCostPerKGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HousingCosts", DbType="SmallMoney")]
		public System.Nullable<decimal> HousingCosts
		{
			get
			{
				return this._HousingCosts;
			}
			set
			{
				if ((this._HousingCosts != value))
				{
					this.OnHousingCostsChanging(value);
					this.SendPropertyChanging();
					this._HousingCosts = value;
					this.SendPropertyChanged("HousingCosts");
					this.OnHousingCostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Breed_Pet", Storage="_Pets", ThisKey="BreedID", OtherKey="BreedID")]
		public EntitySet<Pet> Pets
		{
			get
			{
				return this._Pets;
			}
			set
			{
				this._Pets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.Breed = this;
		}
		
		private void detach_Pets(Pet entity)
		{
			this.SendPropertyChanging();
			entity.Breed = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pet")]
	public partial class Pet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PetID;
		
		private System.Data.Linq.Binary _PetImage;
		
		private string _PetName;
		
		private string _Gender;
		
		private string _Country;
		
		private System.Nullable<int> _BreedID;
		
		private System.Nullable<decimal> _PetWeight;
		
		private System.Nullable<System.DateTime> _DateWhenRescued;
		
		private System.Nullable<int> _AgeWhenRescued;
		
		private EntityRef<Breed> _Breed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPetIDChanging(int value);
    partial void OnPetIDChanged();
    partial void OnPetImageChanging(System.Data.Linq.Binary value);
    partial void OnPetImageChanged();
    partial void OnPetNameChanging(string value);
    partial void OnPetNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnBreedIDChanging(System.Nullable<int> value);
    partial void OnBreedIDChanged();
    partial void OnPetWeightChanging(System.Nullable<decimal> value);
    partial void OnPetWeightChanged();
    partial void OnDateWhenRescuedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateWhenRescuedChanged();
    partial void OnAgeWhenRescuedChanging(System.Nullable<int> value);
    partial void OnAgeWhenRescuedChanged();
    #endregion
		
		public Pet()
		{
			this._Breed = default(EntityRef<Breed>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PetID
		{
			get
			{
				return this._PetID;
			}
			set
			{
				if ((this._PetID != value))
				{
					this.OnPetIDChanging(value);
					this.SendPropertyChanging();
					this._PetID = value;
					this.SendPropertyChanged("PetID");
					this.OnPetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PetImage
		{
			get
			{
				return this._PetImage;
			}
			set
			{
				if ((this._PetImage != value))
				{
					this.OnPetImageChanging(value);
					this.SendPropertyChanging();
					this._PetImage = value;
					this.SendPropertyChanged("PetImage");
					this.OnPetImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetName", DbType="VarChar(255)")]
		public string PetName
		{
			get
			{
				return this._PetName;
			}
			set
			{
				if ((this._PetName != value))
				{
					this.OnPetNameChanging(value);
					this.SendPropertyChanging();
					this._PetName = value;
					this.SendPropertyChanged("PetName");
					this.OnPetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(255)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(255)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreedID", DbType="Int")]
		public System.Nullable<int> BreedID
		{
			get
			{
				return this._BreedID;
			}
			set
			{
				if ((this._BreedID != value))
				{
					if (this._Breed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBreedIDChanging(value);
					this.SendPropertyChanging();
					this._BreedID = value;
					this.SendPropertyChanged("BreedID");
					this.OnBreedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetWeight", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PetWeight
		{
			get
			{
				return this._PetWeight;
			}
			set
			{
				if ((this._PetWeight != value))
				{
					this.OnPetWeightChanging(value);
					this.SendPropertyChanging();
					this._PetWeight = value;
					this.SendPropertyChanged("PetWeight");
					this.OnPetWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateWhenRescued", DbType="Date")]
		public System.Nullable<System.DateTime> DateWhenRescued
		{
			get
			{
				return this._DateWhenRescued;
			}
			set
			{
				if ((this._DateWhenRescued != value))
				{
					this.OnDateWhenRescuedChanging(value);
					this.SendPropertyChanging();
					this._DateWhenRescued = value;
					this.SendPropertyChanged("DateWhenRescued");
					this.OnDateWhenRescuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgeWhenRescued", DbType="Int")]
		public System.Nullable<int> AgeWhenRescued
		{
			get
			{
				return this._AgeWhenRescued;
			}
			set
			{
				if ((this._AgeWhenRescued != value))
				{
					this.OnAgeWhenRescuedChanging(value);
					this.SendPropertyChanging();
					this._AgeWhenRescued = value;
					this.SendPropertyChanged("AgeWhenRescued");
					this.OnAgeWhenRescuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Breed_Pet", Storage="_Breed", ThisKey="BreedID", OtherKey="BreedID", IsForeignKey=true)]
		public Breed Breed
		{
			get
			{
				return this._Breed.Entity;
			}
			set
			{
				Breed previousValue = this._Breed.Entity;
				if (((previousValue != value) 
							|| (this._Breed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Breed.Entity = null;
						previousValue.Pets.Remove(this);
					}
					this._Breed.Entity = value;
					if ((value != null))
					{
						value.Pets.Add(this);
						this._BreedID = value.BreedID;
					}
					else
					{
						this._BreedID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Breed");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Species")]
	public partial class Specy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpeciesID;
		
		private string _Species;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpeciesIDChanging(int value);
    partial void OnSpeciesIDChanged();
    partial void OnSpeciesChanging(string value);
    partial void OnSpeciesChanged();
    #endregion
		
		public Specy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpeciesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpeciesID
		{
			get
			{
				return this._SpeciesID;
			}
			set
			{
				if ((this._SpeciesID != value))
				{
					this.OnSpeciesIDChanging(value);
					this.SendPropertyChanging();
					this._SpeciesID = value;
					this.SendPropertyChanged("SpeciesID");
					this.OnSpeciesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Species", DbType="VarChar(255)")]
		public string Species
		{
			get
			{
				return this._Species;
			}
			set
			{
				if ((this._Species != value))
				{
					this.OnSpeciesChanging(value);
					this.SendPropertyChanging();
					this._Species = value;
					this.SendPropertyChanged("Species");
					this.OnSpeciesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vetbill")]
	public partial class Vetbill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VetBillID;
		
		private System.Nullable<int> _PetID;
		
		private System.Nullable<decimal> _Vaccines;
		
		private System.Nullable<decimal> _Neutering_Procedures;
		
		private System.Nullable<decimal> _Id_Chipping;
		
		private System.Nullable<decimal> _Flea_Spraying;
		
		private System.Nullable<decimal> _Worming_Pills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVetBillIDChanging(int value);
    partial void OnVetBillIDChanged();
    partial void OnPetIDChanging(System.Nullable<int> value);
    partial void OnPetIDChanged();
    partial void OnVaccinesChanging(System.Nullable<decimal> value);
    partial void OnVaccinesChanged();
    partial void OnNeutering_ProceduresChanging(System.Nullable<decimal> value);
    partial void OnNeutering_ProceduresChanged();
    partial void OnId_ChippingChanging(System.Nullable<decimal> value);
    partial void OnId_ChippingChanged();
    partial void OnFlea_SprayingChanging(System.Nullable<decimal> value);
    partial void OnFlea_SprayingChanged();
    partial void OnWorming_PillsChanging(System.Nullable<decimal> value);
    partial void OnWorming_PillsChanged();
    #endregion
		
		public Vetbill()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VetBillID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VetBillID
		{
			get
			{
				return this._VetBillID;
			}
			set
			{
				if ((this._VetBillID != value))
				{
					this.OnVetBillIDChanging(value);
					this.SendPropertyChanging();
					this._VetBillID = value;
					this.SendPropertyChanged("VetBillID");
					this.OnVetBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PetID", DbType="Int")]
		public System.Nullable<int> PetID
		{
			get
			{
				return this._PetID;
			}
			set
			{
				if ((this._PetID != value))
				{
					this.OnPetIDChanging(value);
					this.SendPropertyChanging();
					this._PetID = value;
					this.SendPropertyChanged("PetID");
					this.OnPetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vaccines", DbType="SmallMoney")]
		public System.Nullable<decimal> Vaccines
		{
			get
			{
				return this._Vaccines;
			}
			set
			{
				if ((this._Vaccines != value))
				{
					this.OnVaccinesChanging(value);
					this.SendPropertyChanging();
					this._Vaccines = value;
					this.SendPropertyChanged("Vaccines");
					this.OnVaccinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neutering_Procedures", DbType="SmallMoney")]
		public System.Nullable<decimal> Neutering_Procedures
		{
			get
			{
				return this._Neutering_Procedures;
			}
			set
			{
				if ((this._Neutering_Procedures != value))
				{
					this.OnNeutering_ProceduresChanging(value);
					this.SendPropertyChanging();
					this._Neutering_Procedures = value;
					this.SendPropertyChanged("Neutering_Procedures");
					this.OnNeutering_ProceduresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Chipping", DbType="SmallMoney")]
		public System.Nullable<decimal> Id_Chipping
		{
			get
			{
				return this._Id_Chipping;
			}
			set
			{
				if ((this._Id_Chipping != value))
				{
					this.OnId_ChippingChanging(value);
					this.SendPropertyChanging();
					this._Id_Chipping = value;
					this.SendPropertyChanged("Id_Chipping");
					this.OnId_ChippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flea_Spraying", DbType="SmallMoney")]
		public System.Nullable<decimal> Flea_Spraying
		{
			get
			{
				return this._Flea_Spraying;
			}
			set
			{
				if ((this._Flea_Spraying != value))
				{
					this.OnFlea_SprayingChanging(value);
					this.SendPropertyChanging();
					this._Flea_Spraying = value;
					this.SendPropertyChanged("Flea_Spraying");
					this.OnFlea_SprayingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Worming_Pills", DbType="SmallMoney")]
		public System.Nullable<decimal> Worming_Pills
		{
			get
			{
				return this._Worming_Pills;
			}
			set
			{
				if ((this._Worming_Pills != value))
				{
					this.OnWorming_PillsChanging(value);
					this.SendPropertyChanging();
					this._Worming_Pills = value;
					this.SendPropertyChanged("Worming_Pills");
					this.OnWorming_PillsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
